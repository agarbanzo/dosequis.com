'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

require('scss/components/touts');

var _slickCarousel = require('slick-carousel');

var _slickCarousel2 = _interopRequireDefault(_slickCarousel);

require('./touts-loader');

var _tracking = require('services/google-analytics/tracking');

var _tracking2 = _interopRequireDefault(_tracking);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Touts = function () {
    function Touts() {
        var _this = this;

        _classCallCheck(this, Touts);

        $(function () {
            _this.initTouts();
        });
    }

    _createClass(Touts, [{
        key: 'initTouts',
        value: function initTouts() {
            var touts = $('.touts');
            touts.slick({
                infinite: false,
                dots: true,
                responsive: [{
                    breakpoint: 3000,
                    settings: {
                        slidesToShow: 2,
                        centerPadding: '0px'
                    }
                }, {
                    breakpoint: 767,
                    settings: {
                        slidesToShow: 1,
                        centerMode: true,
                        centerPadding: '6.25%'
                    }
                }]
            });

            touts.on('swipe', function (event, slick, direction) {
                var index = $(event.currentTarget).find('.slick-current').data('slick-index') + 1;
                _tracking2.default.trackEvent({
                    action: 'swipe',
                    category: "touts",
                    label: 'slide-' + index
                });
            });
        }
    }]);

    return Touts;
}();

exports.default = Touts;

var touts = new Touts();